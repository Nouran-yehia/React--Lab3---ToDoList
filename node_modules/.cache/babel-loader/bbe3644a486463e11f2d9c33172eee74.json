{"ast":null,"code":"var _jsxFileName = \"/home/noura/myapp3/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction Todo({\n  todo,\n  index,\n  completeTodo,\n  removeTodo\n}) {\n  return React.createElement(\"div\", {\n    className: \"todo\",\n    style: {\n      textDecoration: todo.isCompleted ? \"line-through\" : \"\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, todo.text, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => completeTodo(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Complete\"), React.createElement(\"button\", {\n    onClick: () => removeTodo(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"x\")));\n}\n\nfunction TodoForm({\n  addTodo\n}) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n}\n\nfunction App() {\n  const [todos, setTodos] = useState([{\n    text: \"Learn about React\",\n    isCompleted: false\n  }, {\n    text: \"Meet friend for lunch\",\n    isCompleted: false\n  }, {\n    text: \"Build really cool todo app\",\n    isCompleted: false\n  }]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, {\n      text\n    }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"todo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, todos.map((todo, index) => React.createElement(Todo, {\n    className: \"todo\",\n    key: index,\n    index: index,\n    todo: todo,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/noura/myapp3/src/App.js"],"names":["React","useState","Todo","todo","index","completeTodo","removeTodo","textDecoration","isCompleted","text","TodoForm","addTodo","value","setValue","handleSubmit","e","preventDefault","target","App","todos","setTodos","newTodos","splice","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction Todo({ todo, index, completeTodo, removeTodo }) {\n  return (\n    <div\n      className=\"todo\"\n      style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\n    >\n      {todo.text}\n\n      <div>\n        <button onClick={() => completeTodo(index)}>Complete</button>\n        <button onClick={() => removeTodo(index)}>x</button>\n      </div>\n    </div>\n  );\n}\n\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      text: \"Learn about React\",\n      isCompleted: false\n    },\n    {\n      text: \"Meet friend for lunch\",\n      isCompleted: false\n    },\n    {\n      text: \"Build really cool todo app\",\n      isCompleted: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"App\">\n      <TodoForm addTodo={addTodo} />\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo className=\"todo\"\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n          />\n        ))}\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}